
/**
 *
 * @author Rahul
 */

import com.mysql.jdbc.ResultSetMetaData;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class RegisterStaff extends javax.swing.JFrame {

    /**
     * Creates new form RegisterStaff
     */
    Connection con=null;
    public RegisterStaff() {
       
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        staffid = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        deptid = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        designation = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        emailid = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        drivinglicense = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        traininglevel = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        authoritylevel = new javax.swing.JTextField();
        insert = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        password = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        firstname = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        lastname = new javax.swing.JTextField();
        back = new javax.swing.JButton();
        employeedetail = new javax.swing.JButton();
        close = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Register Staff");

        jLabel2.setText("Staff ID");

        jLabel3.setText("Department ID");

        jLabel4.setText("Designation");

        jLabel5.setText("Email ID");

        jLabel6.setText("Driving License");

        jLabel7.setText("Training Level");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Only for UHTD Employee");

        jLabel9.setText("Authority level");

        insert.setText("Insert");
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });

        jLabel10.setText("Set Password");

        jLabel11.setText("First Name");

        jLabel12.setText("Last Name");

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        employeedetail.setText("Registered employee details");
        employeedetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeedetailActionPerformed(evt);
            }
        });

        close.setText("Close");
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });

        update.setText("update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setText("delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(employeedetail)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(back)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(close)))
                        .addGap(41, 41, 41))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12))
                                .addGap(85, 85, 85))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(insert)
                                .addGap(48, 48, 48)
                                .addComponent(update)
                                .addGap(36, 36, 36)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(delete)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(staffid)
                                .addComponent(deptid)
                                .addComponent(designation)
                                .addComponent(emailid)
                                .addComponent(drivinglicense)
                                .addComponent(traininglevel)
                                .addComponent(authoritylevel)
                                .addComponent(password)
                                .addComponent(firstname)
                                .addComponent(lastname, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(jLabel8)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(staffid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(firstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(lastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(deptid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(designation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(emailid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(drivinglicense, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(traininglevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(authoritylevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insert)
                    .addComponent(update)
                    .addComponent(delete))
                .addGap(31, 31, 31)
                .addComponent(employeedetail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(close)
                    .addComponent(back))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed
        // TODO add your handling code here:
        try{
            con=MySqlConnect.ConnectDB();
            //insert into Staff table
            if(staffid.getText().trim().length()>0 && firstname.getText().trim().length()>0 && lastname.getText().trim().length()>0 && deptid.getText().trim().length()>0 && designation.getText().trim().length()>0 && emailid.getText().trim().length()>0 && password.getText().trim().length()>0)
            {
            PreparedStatement p1=con.prepareStatement("insert into Staff (staffid,password) values(?,?);");
            p1.setString(1,staffid.getText().trim());
            p1.setString(2,password.getText());
            int r1=p1.executeUpdate();
            //insert into StaffInformation table
            PreparedStatement p2=con.prepareStatement("insert into StaffInformation(staffid,firstname,lastname,deptid,designation,emailid) values(?,?,?,?,?,?);");
            p2.setString(1,staffid.getText().trim());
            p2.setString(2,firstname.getText().trim());
            p2.setString(3,lastname.getText().trim());
            //check for deptid
            String s=deptid.getText().trim();
            PreparedStatement pchk=con.prepareStatement("Select * from department where deptid=?");
            pchk.setString(1,deptid.getText().trim());
            ResultSet rs=pchk.executeQuery();
            if(rs.next())
            {
            p2.setString(4,deptid.getText().trim());
            }
            p2.setString(5,designation.getText().trim());
            p2.setString(6,emailid.getText().trim());
            int r2=p2.executeUpdate();
            //insert into StaffDriver table
            if(drivinglicense.getText().length()>0)
            {
            PreparedStatement p3=con.prepareStatement("insert into StaffDriver(staffid,drivinglicense) values(?,?);");
            p3.setString(1,staffid.getText().trim());
            p3.setString(2,drivinglicense.getText().trim());
            int r3=p3.executeUpdate();
            }
            //insert into StaffMechanic table
            if(traininglevel.getText().length()>0 && authoritylevel.getText().length()>0 )
            {
            PreparedStatement p4=con.prepareStatement("insert into StaffMechanic(staffid,traininglevel,authoritylevel) values(?,?,?);");
            p4.setString(1,staffid.getText().trim());
            p4.setString(2,traininglevel.getText().trim());
            p4.setString(3,authoritylevel.getText().trim().toLowerCase());
            int r4=p4.executeUpdate();
            }
            JOptionPane.showMessageDialog(null, "Successfull Insert");
            }
            else
            {
                JOptionPane.showMessageDialog(null, "fill proper details");
            }
                
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_insertActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        Login l=new Login();
        this.setVisible(false);
        l.setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_closeActionPerformed

    private void employeedetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeedetailActionPerformed
        // TODO add your handling code here:
        try{
            con=MySqlConnect.ConnectDB();
        Statement s;
             s = con.createStatement();
        ResultSet res=s.executeQuery("Select * from staffinformation");
        //get meta data
             ResultSetMetaData rsmetadata= (ResultSetMetaData) res.getMetaData();
             // get column count
             int column=rsmetadata.getColumnCount();
             // this object pass data into jtable
             DefaultTableModel dtm= new DefaultTableModel();
             Vector columnname= new Vector();
             Vector datarow= new Vector();
             for(int i=1;i<=column;i++)
             {
                 columnname.addElement(rsmetadata.getColumnName(i));
             }
             dtm.setColumnIdentifiers(columnname);
             while(res.next())
                     {
                         datarow= new Vector();
                      for(int j=1;j<=column;j++)
                      {
                          datarow.addElement(res.getString(j));
                      }
                      dtm.addRow(datarow);
                     }
             jTable1.setModel(dtm);
       }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_employeedetailActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
       try{
            con=MySqlConnect.ConnectDB();
            //confirm for previous password
            String pass=JOptionPane.showInputDialog("Enter Previous password");
            PreparedStatement pchkk=con.prepareStatement("Select * from staff where staffid=? and password=?;");
            pchkk.setString(1, staffid.getText().trim());
            pchkk.setString(2, pass);
            ResultSet rss=pchkk.executeQuery();
            if(rss.next())
            {
            //insert into Staff table
            if(staffid.getText().trim().length()>0 && firstname.getText().trim().length()>0 && lastname.getText().trim().length()>0 && deptid.getText().trim().length()>0 && designation.getText().trim().length()>0 && emailid.getText().trim().length()>0 && password.getText().trim().length()>0)
            {
            if(password.getText().trim().length()>0)
            {
            PreparedStatement p1=con.prepareStatement("update Staff set password=? where staffid=?;");
            p1.setString(2,staffid.getText().trim());
            p1.setString(1,password.getText());
            int r1=p1.executeUpdate();
            }
            //insert into StaffInformation table
            PreparedStatement p2=con.prepareStatement("update StaffInformation set firstname=?,lastname=?,deptid=?,designation=?,emailid=? where staffid=?;");
            p2.setString(6,staffid.getText().trim());
            p2.setString(1,firstname.getText().trim());
            p2.setString(2,lastname.getText().trim());
            //check for deptid
            String s=deptid.getText().trim();
            PreparedStatement pchk=con.prepareStatement("Select * from department where deptid=?");
            pchk.setString(1,deptid.getText().trim());
            ResultSet rs=pchk.executeQuery();
            if(rs.next())
            {
            p2.setString(3,deptid.getText().trim());
            }
            p2.setString(4,designation.getText().trim());
            p2.setString(5,emailid.getText().trim());
            int r2=p2.executeUpdate();
            //insert into StaffDriver table
            if(drivinglicense.getText().length()>0)
            {
            PreparedStatement p3=con.prepareStatement("update StaffDriver set drivinglicense=? where staffid=?;");
            p3.setString(2,staffid.getText().trim());
            p3.setString(1,drivinglicense.getText().trim());
            int r3=p3.executeUpdate();
            }
            //insert into StaffMechanic table
            if(traininglevel.getText().length()>0 && authoritylevel.getText().length()>0)
            {
            PreparedStatement p4=con.prepareStatement("update StaffMechanic set traininglevel=?,authoritylevel=? where staffid=?;");
            p4.setString(3,staffid.getText().trim());
            p4.setString(1,traininglevel.getText().trim());
            p4.setString(2,authoritylevel.getText().trim().toLowerCase());
            int r4=p4.executeUpdate();
            }
                JOptionPane.showMessageDialog(null, "Successfull update");
            }
             else
             {
                JOptionPane.showMessageDialog(null, "Recheck Form"); 
             }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Invalid Credentials");
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        try{
            con=MySqlConnect.ConnectDB();
            //insert into Staff table
            PreparedStatement p1=con.prepareStatement("delete from Staff where staffid=?;");
            p1.setString(1,staffid.getText().trim());
            int r1=p1.executeUpdate();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_deleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegisterStaff().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField authoritylevel;
    private javax.swing.JButton back;
    private javax.swing.JButton close;
    private javax.swing.JButton delete;
    private javax.swing.JTextField deptid;
    private javax.swing.JTextField designation;
    private javax.swing.JTextField drivinglicense;
    private javax.swing.JTextField emailid;
    private javax.swing.JButton employeedetail;
    private javax.swing.JTextField firstname;
    private javax.swing.JButton insert;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField lastname;
    private javax.swing.JTextField password;
    private javax.swing.JTextField staffid;
    private javax.swing.JTextField traininglevel;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
